{
    "$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
    "vcs": { "enabled": true, "clientKind": "git", "useIgnoreFile": true },
    "files": { "ignoreUnknown": false, "ignore": [] },
    "css": {
      "formatter": {
        "enabled": true
      },
      "linter": {
        "enabled": true
      },
      "parser": {
        "cssModules": true
      }
    },
    "formatter": {
      "enabled": true,
      "formatWithErrors": false,
      "indentStyle": "space",
      "indentWidth": 2,
      "lineEnding": "lf",
      "lineWidth": 80,
      "attributePosition": "auto",
      "bracketSpacing": true
    },
    "organizeImports": { "enabled": true },
    "linter": {
      "enabled": true,
      "rules": {
        "recommended": false,
        "a11y": { "noBlankTarget": "error" },
        "complexity": {
          "noExtraBooleanCast": "error",
          "noMultipleSpacesInRegularExpressionLiterals": "error",
          "noUselessCatch": "error",
          "noUselessThisAlias": "error",
          "noUselessTypeConstraint": "error",
          "noWith": "error"
        },
        "correctness": {
          "noChildrenProp": "error",
          "noConstAssign": "error",
          "noConstantCondition": "error",
          "noEmptyCharacterClassInRegex": "error",
          "noEmptyPattern": "error",
          "noGlobalObjectCalls": "error",
          "noInnerDeclarations": "off",
          "noInvalidConstructorSuper": "error",
          "noNewSymbol": "error",
          "noNonoctalDecimalEscape": "error",
          "noPrecisionLoss": "error",
          "noSelfAssign": "error",
          "noSetterReturn": "error",
          "noSwitchDeclarations": "error",
          "noUndeclaredVariables": "error",
          "noUnreachable": "error",
          "noUnreachableSuper": "error",
          "noUnsafeFinally": "error",
          "noUnsafeOptionalChaining": "error",
          "noUnusedLabels": "error",
          "noUnusedVariables": "warn",
          "useArrayLiterals": "off",
          "useExhaustiveDependencies": "warn",
          "useHookAtTopLevel": "error",
          "useIsNan": "error",
          "useJsxKeyInIterable": "error",
          "useValidForDirection": "error",
          "useYield": "error"
        },
        "security": { "noDangerouslySetInnerHtmlWithChildren": "error" },
        "style": {
          "noNamespace": "error",
          "noNonNullAssertion": "off",
          "noVar": "off",
          "useAsConstAssertion": "error",
          "useBlockStatements": "off",
          "useConst": "off"
        },
        "suspicious": {
          "noAssignInExpressions": "error",
          "noAsyncPromiseExecutor": "error",
          "noCatchAssign": "error",
          "noClassAssign": "error",
          "noCommentText": "error",
          "noCompareNegZero": "error",
          "noControlCharactersInRegex": "error",
          "noDebugger": "error",
          "noDuplicateCase": "error",
          "noDuplicateClassMembers": "error",
          "noDuplicateJsxProps": "error",
          "noDuplicateObjectKeys": "error",
          "noDuplicateParameters": "error",
          "noEmptyBlockStatements": "error",
          "noExplicitAny": "off",
          "noExtraNonNullAssertion": "error",
          "noFallthroughSwitchClause": "error",
          "noFunctionAssign": "error",
          "noGlobalAssign": "error",
          "noImportAssign": "error",
          "noMisleadingCharacterClass": "error",
          "noMisleadingInstantiator": "error",
          "noPrototypeBuiltins": "error",
          "noRedeclare": "error",
          "noShadowRestrictedNames": "error",
          "noSparseArray": "error",
          "noUnsafeDeclarationMerging": "error",
          "noUnsafeNegation": "error",
          "useGetterReturn": "error",
          "useNamespaceKeyword": "error",
          "useValidTypeof": "error"
        }
      }
    },
    "javascript": { "formatter": { "quoteStyle": "double" } },
    "overrides": [
      {
        "include": ["*.ts", "*.tsx", "*.mts", "*.cts"],
        "linter": {
          "rules": {
            "correctness": {
              "noConstAssign": "off",
              "noGlobalObjectCalls": "off",
              "noInvalidBuiltinInstantiation": "off",
              "noInvalidConstructorSuper": "off",
              "noNewSymbol": "off",
              "noSetterReturn": "off",
              "noUndeclaredVariables": "off",
              "noUnreachable": "off",
              "noUnreachableSuper": "off"
            },
            "style": {
              "noArguments": "error",
              "noVar": "error",
              "useConst": "error"
            },
            "suspicious": {
              "noClassAssign": "off",
              "noDuplicateClassMembers": "off",
              "noDuplicateObjectKeys": "off",
              "noDuplicateParameters": "off",
              "noFunctionAssign": "off",
              "noImportAssign": "off",
              "noRedeclare": "off",
              "noUnsafeNegation": "off",
              "useGetterReturn": "off"
            }
          }
        }
      },
      {
        "include": ["*.ts", "*.tsx", "*.mts", "*.cts"],
        "linter": {
          "rules": {
            "correctness": {
              "noConstAssign": "off",
              "noGlobalObjectCalls": "off",
              "noInvalidBuiltinInstantiation": "off",
              "noInvalidConstructorSuper": "off",
              "noNewSymbol": "off",
              "noSetterReturn": "off",
              "noUndeclaredVariables": "off",
              "noUnreachable": "off",
              "noUnreachableSuper": "off"
            },
            "style": {
              "noArguments": "error",
              "noVar": "error",
              "useConst": "error"
            },
            "suspicious": {
              "noClassAssign": "off",
              "noDuplicateClassMembers": "off",
              "noDuplicateObjectKeys": "off",
              "noDuplicateParameters": "off",
              "noFunctionAssign": "off",
              "noImportAssign": "off",
              "noRedeclare": "off",
              "noUnsafeNegation": "off",
              "useGetterReturn": "off"
            }
          }
        }
      },
      {
        "include": ["*.test.tsx", "*.test.ts"],
        "javascript": {
          "globals": [
            "afterEach",
            "afterAll",
            "beforeEach",
            "beforeAll",
            "describe",
            "expect",
            "it",
            "test",
            "vi"
          ]
        }
      }
    ]
  }